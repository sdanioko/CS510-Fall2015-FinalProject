"\\documentclass{article}\n\\title{Title of Document}\n\\author{Name of Author}\n\n\\begin{document}\n\\maketitle\nThis project is designated to explore typical infinitely complex images such as the Julia and the Mandelbrot Sets and their chaotically intricate and beautiful designs. For the sake of simplicity, through this project we will shorten the Julia Set and Mandelbrot respectively by J-Set and  M-Set.\n*  Julia Set?\n    \n    A J-Set is a set that is associated with points z = x + iy of the complex plane for which the series \n    z(n+1) = z(n)^2 + c  \n    where the constant complex c does not tend to infinity. In this, x and y are image pixel coordinates in a given range. In general, the accepted range is -2 and 2. The series expressed above is repeatedly updated with c another complex number that gives a specific J-Set. After a considerable number of iterations, if the magnitude of z is less that 2 one can state that pixel is in the J-Set and color accordingly.\n* Mandelbrot Set?\n\n    An M-Set can be defined as the set of all the complex numbers z for which the series defined by the iteration z(n+1) = z(n)^2 + z for n = 0,1,2,3,.. where z(0) = z, remains bounded. By bounded we mean that there exists a number M such that for any n, absolute value of z(n) is less than M. \n    \n    The M-Set also well known as a map of all J-Sets uses a different c at       each location as if transforming from one J-Set to another across       space.For, c differs for each pixel  and is x+iy where x and y are       seen as image coordinates. \n* What is the difference between the two sets?\n\n   Not only reside the differences between the two in the formula, but \n   also in the type of iteration involved in their computation.In            general,an M-set is plotted in the space centered at a given parameter    c, which can be expressed in terms of 0,c,c^2+c,(c^2+c)^2+c,... In contrast, a Julia-set is plotted in the orbit space z. In doing so, we \n   \n   To be more precise, a plot of the M-set is obtained by iterating over many different values\n   of c. In contrast, a plot of the J-set is obtained by iterating over many different values of z for a fixed c. \n   \n   Computing J-sets and M-sets by computer is very easy by using  the brute force methods. Despite having the same formula for iteration, two major changes can be noticed in the computation. With the J-set, we first start fixing a complex number c which never changes. Second, we pick a complex point z in the plane. Third, we iterate and check if bounded. Fourth, count z as being in the J-set once founded bounded.\n   \n   On the other hand, with the M-set we first start with an initial condition where z = 0. Second, we pick a point in the c plane. Third, we iterate and see if bounded, if so c should be counted as a point in the M-set.\n   \n   With  the M-set we are mainly plotting a picture of all the complex numbers c such that the mapping z to z^2+c is bounded with a certain initial condition. Opposed to that, with the J-set we are plotting a single value c while changing the initial condition\n   \n   To resume, we can say that the M-Set :\n       * gives a picture in parameter space\n       * records the fate of the orbit 0\n   The Julia Set:\n       * displays a picture in dynamical plane\n       * records the fate of all orbits\n\n\\end{document}\n"
{"patch":[[[[0,"^2 + c  "],[-1,"\n    "],[0,"where th"]],542,542,21,16]],"time":1449809340805}
{"patch":[[[[0," series "],[-1,"\n    "],[0,"z(n+1) ="]],516,516,21,16]],"time":1449809335858}
{"patch":[[[[0,")^2 + c "],[-1," "],[0,"where th"]],536,536,17,16]],"time":1449809322463}
{"patch":[[[[0,"itle"],[-1,"\nThis project is designated to explore typical infinitely complex images such as the Julia and the Mandelbrot Sets and their chaotically intricate and beautiful designs. For the sake of simplicity, through this project we will shorten the Julia Set and Mandelbrot respectively by J-Set and  M-Set.\n*  Julia Set?\n    \n    A J-Set is a set that is associated with points z = x + iy of the complex plane for which the series z(n+1) = z(n)^2 + c where the constant complex c does not tend to infinity. In this, x and y are image pixel coordinates in a given range. In general, the accepted range is -2 and 2. The series expressed above is repeatedly updated with c another complex number that gives a specific J-Set. After a considerable number of iterations, if the magnitude of z is less that 2 one can state that pixel is in the J-Set and color accordingly.\n* Mandelbrot Set?\n\n    An M-Set can be defined as the set of all the complex numbers z for which the series defined by the iteration z(n+1) = z(n)^2 + z for n = 0,1,2,3,.. where z(0) = z, remains bounded. By bounded we mean that there exists a number M such that for any n, absolute value of z(n) is less than M. \n    \n    The M-Set also well known as a map of all J-Sets uses a different c at       each location as if transforming from one J-Set to another across       space.For, c differs for each pixel  and is x+iy where x and y are       seen as image coordinates. \n* What is the difference between the two sets?\n\n   Not only reside the differences between the two in the formula, but \n   also in the type of iteration involved in their computation.In            general,an M-set is plotted in the space centered at a given parameter    c, which can be expressed in terms of 0,c,c^2+c,(c^2+c)^2+c,... In contrast, a Julia-set is plotted in the orbit space z. In doing so, we \n   \n   To be more precise, a plot of the M-set is obtained by iterating over many different values\n   of c. In contrast, a plot of the J-set is obtained by iterating over many different values of z for a fixed c. \n   \n   Computing J-sets and M-sets by computer is very easy by using  the brute force methods. Despite having the same formula for iteration, two major changes can be noticed in the computation. With the J-set, we first start fixing a complex number c which never changes. Second, we pick a complex point z in the plane. Third, we iterate and check if bounded. Fourth, count z as being in the J-set once founded bounded.\n   \n   On the other hand, with the M-set we first start with an initial condition where z = 0. Second, we pick a point in the c plane. Third, we iterate and see if bounded, if so c should be counted as a point in the M-set.\n   \n   With  the M-set we are mainly plotting a picture of all the complex numbers c such that the mapping z to z^2+c is bounded with a certain initial condition. Opposed to that, with the J-set we are plotting a single value c while changing the initial condition\n   \n   To resume, we can say that the M-Set :\n       * gives a picture in parameter space\n       * records the fate of the orbit 0\n   The Julia Set:\n       * displays a picture in dynamical plane\n       * records the fate of all orbits"],[0,"\n\n\\e"]],98,98,3207,8]],"time":1449809248800}
{"patch":[[[[0,"ketitle\n"],[1,"Justin is the maste"],[0,"\n\\end{do"]],95,95,16,35]],"time":1449809244765}
{"patch":[[[[0,"he maste"],[1,"r"],[0,"\n\\end{do"]],114,114,16,17]],"time":1449809242804}
{"patch":[[[[0,"the "],[-1,"master"],[0,"\n\\en"]],113,113,14,8]],"time":1449809191836}
{"patch":[[[[0,"stin"],[-1," is the "],[0,"\n\\en"]],105,105,16,8]],"time":1449809189838}
{"patch":[[[[0,"tle\nJust"],[-1,"in"],[0,"\n\\end{do"]],99,99,18,16]],"time":1449809187870}
{"patch":[[[[0,"le\nJ"],[-1,"ust"],[0,"\n\\en"]],100,100,11,8]],"time":1449809185834}
{"patch":[[[[0,"tle\n"],[-1,"J"],[0,"\n\\en"]],99,99,9,8]],"time":1449809183843}